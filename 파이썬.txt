파이썬 - 환경설정
접근성이 좋다
www.python.org
- python 3(인터프리터, 라이브러리,툴(IDLE)

seasons = ['spring','summer','autumn','winter']
seasons = [0:2]
>>>['spring','summer'] // 뒤에꺼 하나 뺀값 나옴 주의
seasons = [:]
>>> ['spring','summer','autumn','winter'] // 배열다튀어나옴

변수 var 예약어,숫자가맨앞에못옴

%appdata% 안에 local > Programs > Python > Python311 안에 있음 
이안에서 모듈이랑 라이브러리 Doc문서 제어 가능
C:\Users\Administrator\AppData\Local\Programs\Python\Python311 <- 환경변수해둘것
=========================================================
1. 세미콜론(;) 사용하지않음
2. 파이썬은 자료형 키워드가 없음
3. 주석 처리 - # 여러줄주석 - """~"""
4. &&, ||, ! 연산자 사용안함.. and or not
5. 비트 연산자 - &, |

python3
- 인터프리터, 모듈, 라이브러리
- IDLE(Editor)
=========================================================
		@@@@@조건문&제어문@@@@@
일반언어
if 조건식:{
실행1
}else{
실행2
}

python
if 조건식:
    실행1 #4칸 들여쓰기(인덴트)
else
    실행2

python
if 조건식1:
    실행1 #4칸 들여쓰기(인덴트)
elif 조건식2
    실행2
else 
    조건1,2가 아니면 실행

출력
print(f'{변수} 이렇게 문자열 안에서도 제어 가능' )
@@@@@@ 증감연산자
i++ 없음

i += 1 <- 요거쓰기
# 1부터 10까지 더하기
i = 0
sum_V=0
while i < 10:
    i += 1
    sum_V = sum_V + i
    print(i)
print(f' 합계 : {sum_V}')

위 코드처럼 f' 다른문자열 {변수}' 블록 안에만 쓰면 됨
블럭 안에서는 사칙연산 뿐만 아니라 {변수1,변수2} 이렇게도 사용 가능

swich ~ case 문이 없음
---------------------------@ for in range 차이점 @-----------
for ~ in 리스트:
for i in range(시작, 종료, 증감):
※ 맨뒤 인자는 1일땐 생략가능
for i in range(1, 11):
    print(i)

end로 요소 컨트롤 디폴트값은 end='\n'으로 출력결과가 한줄 씩 띄워진거 
for i in range(1, 11, 1):
    print(i, end='')
print()
값 : 123456789
---------------------------@ for in range 차이점 @-----------

food 배열의 인텍스 0번을 배열만큼 출력함
food = ['짜장', '짬뽕','간짜장']
for i in food:
    # print(i)
    print(i[0])
값 : 짜짬간
=========================================================
			@@@@@파이썬 자료형(구조)@@@@@

자료 1개 - 변수
자료 여러개 - 컬랙션(collection)
리스트(배열), 딕셔너리(dic), 딕셔너리(tuple), set

리스트 - ['a','b','c']
튜플 - ('a','b','c')
딕셔너리 - {'진':30}
집합 - {'a','b'} - set(), {}를 사용, 순서가 없다, 중복 불허

요약정리
set - 중복 불허, 저장 순서 유지 안함
list - 중복 가능, 저장 순서 유지
map - 키 벨류 값으로 존재, 키의 중복 불허, 값 중복 허용

set -> 집합{}
list -> ['a','b','c']
map -> 딕셔너리['진' : 30]
튜플(tuple) - 요소의 수정과 삭제 불가, 소괄호 사용

※ 보안 ※

1. 숫자형(Numeric Types)
    정수형(Integer) : 양의 정수, 음의 정수,
    실수형(Floating-point) : 소수점이 있는 숫자(부동 소수점)
    복소수형(Complex) : a+bj 형태로 표현되는 숫자 (a는 실수부, b는 허수부)

2. 불(bool) : 참(True)과 거짓(False)을 나타내는 자료형

3. 문자열(String) : 문자, 단어 등으로 구성된 문자들의 집합
    작은 따옴표(')나 큰 따옴표(")로 둘러싸인 문자열

4.리스트(List) : 대괄호([])로 둘러싸인 순서가 있는 요소들의 집합
    요소는 콤마(,)로 구분하며, 인덱스를 이용해 요소에 접근할 수 있음

5. 튜플(Tuple) : 소괄호(())로 둘러싸인 순서가 있는 요소들의 집합
    리스트와 유사하지만, 한 번 생성된 요소는 변경 불가능

6. 딕셔너리(Dictionary) : 중괄호({})로 둘러싸인 key-value 쌍의 집합
    각각의 key와 value는 콜론(:)으로 구분하며, 콤마(,)로 구분함
    인덱스 대신 key를 이용해 value에 접근할 수 있음

7. 집합(Set) : 중괄호({})로 둘러싸인 순서 없는 요소들의 집합
    중복된 요소를 허용하지 않음

=========================================================
IDLE -> 파이참
작은 모듈 - 함수(function, method)
정의
def 함수이름():
    실행문

사용
함수이름()
=========================================================
__ <- 이런거 껴있는것들을 던더함수라함(내장함수)

			@@ 클래스/함수 @@
클래스 3대 요소
생성자(Constructo) -def __init__(self)
멤버 변수
멤버 함수

멤버 변수에 직적 접근하지 않음 - 정보 은닉

classfication(분류)
객체 지향 언어의 특성 - 추상화, 캡슐화, 상속, 다형성

class 클래스A:
    멤버변수
    멤버함수(def)

class 클래스이름(A):   ※ <- A 클래스를 상속

클래스
    클래스 변수(전역변수)
---------------------------------------------------
상속 - 부모의 멤버, 함수의 재사용




=========================================================
	        @@ 파라미터 안 매개변수 @@
ch06 ex03
def 함수이름(변수, 변수2=1):
    실행문
※ 변수2=1 이행위가 변수2를 안넣으면 기본값으로 1이 넣어짐

           @@ 가변 매개변수 @@
ch06 ex03
def 함수이름(*변수):
    실행문
print(함수이름(매개변수1,매개변수2,매개변수3)
※ 가변매개변수 : 인자를 여러개 입력하는 경우를 말함

            @@ 키워드 인자 @@
            test폴더 및 ch09 > ex01_kwargs
def saveDic(**kargs):
    print(kargs)

saveDic(a=1, b=2, c=3)
saveDic(fru="사과", veg="당근")

결과
{'a': 1, 'b': 2, 'c': 3}
{'fru': '사과', 'veg': '당근'}

※ 번외로
리스트자료형이나 튜플을 넣을수도있다 예시로
def sum_v(a):# 입력 매개변수를 튜플 리스트를 넣어서
    total = 0
    fou num in a:
        total = total + num
    print("합게 :", total)

sum([1,2,3,4,5]) # 리스트
sum((5,5,5)) # 튜플


=========================================================
			@@모듈모음@@
날짜시간 - datetime
수학 - math
랜덤 - rnadom

sys ch06/ex04_sys1.py
os

터틀 모듈 - GUI 환경
=========================================================
함수, 클래스 -> 모듈(파일) -> 패키지(라이브러리)
파이썬 웹 서버

재귀함수(recursive function)
 - 자기 자신 호출

익명함수()-실행함수 ※ 그때마다마다 생성해서 씀

람다함수(lamda 함수)
lambda 매개변수:표현식
# 매개변수 1개, 4의 배수
times = lambda x : x * 4
print(times(5))  # 20
print((lambda x : 4 * x)(5)) # 20 ※ 그자리에서 바로 대입

=========================================================
파이썬 서버구현
flask 모듈
djang 모듈
-----------------------------------------
           flask 정리
flask 모듈 -> 소규모 라이브러리
pip install flask
127.0.0.5000
flask1

웹 MVC
Model -> Data
View -> HTML
control -> Flask

flask 계층 구조
    static 폴더 -> css, js, image 파일
    tmeplates 폴더 -> html 파일
    start_app.py -> 실행 파일

웹 사이트 제작 순서
1. 경로(url) - app.py
2. 제어함수 - GET, POST (데이터 - 자료구조, DB) .py
3. html, css, js

템플릿 언어
출력 - {{ }}
url_for(파일 경로)

반복문
명령문 사용 - {% for ~ in %}
{% for ~ in %}
    실행문
{% endfor %}

넘버링(자동순번 같은기능)
{{loop.index}}
1.2.3.4

예외처리 ch07>ex06
try~ except~ 2번있는경우

try~
except~
else~

※ 에러 강제 발동은 따로 안다루심
-----------------------------------------
member - db 구축(SQLite3) <- flask를 이용한 소규모 프로젝트
1. DB 연동
2. 로그인 - 세션과 쿠키 - > 로그아웃
3. 회원가입 유효성 검사

- header 반복 : header.html
- footer 반복 : foot.html
{% include 'header.html' %} 로 반복되는걸 (파이썬 기능)

section 변경

DB - member table
회원 목록 - select()
회원 가입

sqlite3 -> DBMS
conn 객체 얻기

!!!!!!!!!!쿠키와 세션!!!!!!!!!!!!!!!!

클라이언트와 웹 서버 간의 상태를 지속적으로 유지하는 방법 2가지 방법론
                    세션과 쿠키
(html은 하나만 보여지기때문에 다른 html을 가도 접속 유지)

쿠키는 내 컴퓨터로 다시옴
세션은 서버에 남아있음

1. 세션 사용
세션(session) 발급 -> 회원가입, 로그인
{% if session %} - 로그인 된 상태
{% if not session %} - 로그인 안된 상태
alert("로그인해주세요")
href = login.html

회원가입,로그인 -> 세션발급
로그아웃 -> 세션 초기화(로그아웃은 세션있을때만 가능하게 조건문을 걸음)

2. 게시판 목록만들기
1. url('/boardlist')설정
2. 제어함수
3. boardlist.html
게시판테이블
DBMS-SQLITE3

로그인해야 글 쓸수있음(회원가입이 되어있어야함)
관계 - 회원(기본키-memberid) 게시판(외래키)
칼럼명             자료형
bno         글번호 INTEGER(숫자),
title       글제목 TEXT,
content     글내용 TEXT,
createdate  작성일 date
hit         조회수 INTEGER(숫자)
memberid          TEXT(외래키)
외래키제약조건
외래키는(사용할 컬럼명) REFERENCES 테이블(테이블의 컬럼명) 레코드 삭제시 같이 삭제
FOREIGN KEY(memberid) REFERENCES member(memberid) ON DELETE CASCADE

글목록-글제목클릭-글상세보기
detail.html

url - /detail/bno
def detail
detail.html

글 삭제
url - /delete/bno
def delete():
페이지 필요없음(삭제됐다는거만알려주기) -> redirect("boardlist")
세션 적용
자신의 글만 삭제해야함
삭제 버튼이 다른사람은 보이면 안됨
confirm(진짜삭제할건지물어보기) alert같은창인데 확인취소창


                    세션관련 정리
회원가입, 로그인 발급 -> 멤버리스트에서 사용

-----------------------------------------
djang 모듈 -> 프레임워크

=============================
            파일 관련
with open(파일경로, 관련설정)
관련설정 : w쓰기 r읽기 a이전꺼이어쓰기
pickle 모듈
객체의 형태를 그대로 유지하면서
파일을 읽고 쓰는 모듈

문자형 파일 txt
바이너리 파일 - 음성 파일 이미지 .bin
.bin
이미지 파일 읽고 쓰기 - 복사
=============================
         python-GUI
Button(root)
Label(root)
Entery(root) - 입력상자, get()
Text(root) - 출력상자, insert()
Listbox - <textarea>

=============================
Web Server
WAS - flask
WAS랑 WS랑 다르다


==============  05_02    ==================

html, xml를 다루는(파싱)
BeautifulSoup4

환율정보 - 스크래핑
네이버 - 증권 - 시장지표
ex06_naver_exchange

find('속성','속성값')
findAll('속성') => 결과 리스트로 반환
select_one(객체이름.태그)
select
ul = html.select_one('ul.data_lst')

================================
robots.txt
로봇 배제 표준
웹사이트에 로봇이 접근하는 것을 방지하기 위한 규약
================================
regex

\d - [0-9] 숫자만됨
\w - [a-zA-Z0-9] 다된다보면됨
\s - 공백문자space
\+ 1개이상
\* 0개이상
(.) 임의의 문자



웹 스크래핑 - 자료 수집
정규표현식 - 유효성검사
특수문자 사용

데이터 분석 및 시각화
자바스크립트 - 회원가입
파이썬 - 문자열 검색
=========05_04===================
Pandas 모듈
이차원 리스트(행, 열)

데이터분석 시각화

datafream1.ipynb
ipynb i python noot book

anaconda - 아나콘다
jupyter notebook

all(x) - x가 모두 참이여야함
any(x) - x가 하나라도 참이 있으면 True

칼럼명 변경
=========이미지 넣기05_08===================

pyui/ex08_lunch_coupon
Lable에 이미지 넣기
PhotoImage(file='coupon.png')

ex09
1. 파일 단독인경우 - calculator.py
pyinstaller --onefile --noconsole lotto.py
이거하기전 cmd를 파일 있는곳으로 가야함
pyinstaller --onefile --noconsole (해당경로안에있는 파이썬파일)

2. 외부파일이 있는 경우(이미지 첨가된거) - (총 두번실행) 코드 설명순으로 나열
pyinstaller --noconfirm --onefile --windowed --add-data "이미지경로;." "파일경로" # ※이미지 경로;.※ <- 끝에 ;. 꼭붙혀야해요!!
pyinstaller --noconfirm --onefile --windowed --add-data "E:\NSW\PythonWorks\execonpon\bronx.png;." "E:\NSW\PythonWorks\execonpon\coupon.py"
1. 처음에 실행시키고 이미지 dist안으로 넣어줘야함!(여기오류나는거맞음)
2. 파일생겼다면 dist안에 이미지 변경
파일변경했다면 변경한곳에서 파일안에서 이미지경로 수정해줘야해요 안하면 오류남!

외부 라이브러리 exe로 만들어주는 pyinstaller
.exe
실행파일
=================파이썬 책 05_09=================================
입력
1.콘솔 - 명령행(테스트 주도)
2.함수
3.gui

깃허브 https://github.com/kyclark/tiny_python_projects.git
언어공부사이트 https://replit.com/ (리플릿이라읽음)
# 조건분기
article = '' # 'a', 'an'
if word[0].lower() in 'aeiou':
    article = 'an'
else:
    article = 'a'
print(article)

# 조건분기를 한문장으로
char = 'o'
article = 'an' if char in 'aeiou' else 'a'
변수1 = 참값 if 변수2 in 조건 else 거짓값
print(article)

명령행으로 인수 전달
1개 You are bringing aslad.
2개 You are bringing aslad and egg.
3개 You are bringing aslad, egg and gimbob